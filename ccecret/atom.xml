<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://hcc429.github.io/cclog/ccecret</id>
    <title>cclog Blog</title>
    <updated>2024-11-10T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://hcc429.github.io/cclog/ccecret"/>
    <subtitle>cclog Blog</subtitle>
    <icon>https://hcc429.github.io/cclog/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[14X0 之亂]]></title>
        <id>https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss</id>
        <link href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss"/>
        <updated>2024-11-10T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[起因]]></summary>
        <content type="html"><![CDATA[<h2 class="anchor anchorWithStickyNavbar_LWe7" id="起因">起因<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#%E8%B5%B7%E5%9B%A0" class="hash-link" aria-label="起因的直接連結" title="起因的直接連結">​</a></h2>
<p>事情是這樣的，我原本頹廢的躺在床上滑脆<br>
<!-- -->千篇一律的都是別人的寶可夢好卡看得我有點煩<br>
<!-- -->直到看到某一篇脆文在說 MTU 與 VPN 速度的關係</p>
<p><img decoding="async" loading="lazy" src="https://hcc429.github.io/cclog/assets/images/thread-bbbcb4c5e9325cd602d09dd7e4509603.jpg" width="1170" height="1136" class="img_ev3q">
一瞬間覺得被祖了<br>
<!-- -->因為我昨天才在問居批踢大哥為什麼需要有 MTU 這個東西<br>
<!-- -->他回答我這就是一個屬性<br>
<!-- -->就像水管的截面積一樣<br>
<!-- -->勉強給過，但還是覺得有點敷衍😣</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="簡介">簡介<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#%E7%B0%A1%E4%BB%8B" class="hash-link" aria-label="簡介的直接連結" title="簡介的直接連結">​</a></h3>
<p>進入正題前先簡單介紹一下 MTU 跟類似的東西 MSS<br>
<!-- -->MTU (Maximum Transmit Unit) 指的是一個網路設備可以傳輸的封包的最大大小<br>
<!-- -->若是封包大小超過就會分割<br>
<!-- -->像是下圖貨物太大過不去 (from ChatGPT)<br>
<img decoding="async" loading="lazy" src="https://hcc429.github.io/cclog/assets/images/cargo-ef8cd81fb1f30af9190e54cba7e48008.webp" width="1024" height="1024" class="img_ev3q"><br>
<!-- -->而我們不管是TCP 還是 UDP底層都是透過 ip 封包傳出去<br>
<!-- -->因此我們一個封包真的能塞的 TCP/UDP 封包大小應該是 (MTU - IP Header)<br>
<!-- -->我們以下都以 TCP 封包為例<br>
<!-- -->而這些 TCP 封包包含了 TCP Header + TCP 資料<br>
<!-- -->MSS (Maximum Segmeng Size) 指的就是一個封包裡 TCP 資料最多可以用多少<br>
<!-- -->底下這張來自 cloudfare 的圖片可以很清楚的表達<br>
<img decoding="async" loading="lazy" alt="封包" src="https://hcc429.github.io/cclog/assets/images/packet-d3346b198c70a6409144fbf85229f3d5.png" width="441" height="282" class="img_ev3q"></p>
<p>那眼尖一點的老鐵就會發現 MSS 上面寫著 1460 Bytes<br>
<!-- -->後面還有很多接近的數字，這就是標題的由來<br>
<!-- -->我一直打這些數字但腦袋裡面出現的都是 1450 (亂講話</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="vpn">VPN<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#vpn" class="hash-link" aria-label="VPN的直接連結" title="VPN的直接連結">​</a></h2>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="wireguard">WireGuard<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#wireguard" class="hash-link" aria-label="WireGuard的直接連結" title="WireGuard的直接連結">​</a></h3>
<p>那有了上面的知識我們可以繼續了<br>
<!-- -->今天的主角是 Surfshark VPN<br>
<!-- -->好巧不巧我前幾個月忘記退訂所以被他坑了 1000多<br>
<!-- -->那 VPN 應該算是一個概念，有很多不同的協定來實現它<br>
<!-- -->現在用的最廣泛的應該是 <a href="https://zh.wikipedia.org/zh-tw/WireGuard" target="_blank" rel="noopener noreferrer">WireGuard</a><br>
<!-- -->但我們今天的重點也不是他在做什麼<br>
<!-- -->因此只需要知道以下基本知識</p>
<ol>
<li>他使用 UDP，TCP 標頭是 20 Bytes, UDP 標頭是 8 Bytes</li>
<li>ipv4 標頭 是 20 Bytes，ipv6 則為 40 Bytes</li>
<li>他還會需要額外的 32 bytes 的標頭</li>
</ol>
<p>看到這邊<br>
<!-- -->哎呦，多了一個 20 跟 40 的拼圖可以用了<br>
<!-- -->我們先來看看具體的東西</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="現實">現實<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#%E7%8F%BE%E5%AF%A6" class="hash-link" aria-label="現實的直接連結" title="現實的直接連結">​</a></h3>
<p>使用 <code>ifconfig</code> 來看 VPN 使用的 interface 只看到以下<br>
<!-- -->( 我是透過上面的 ip 來得知他就是 VPN 使用的 )</p>
<div class="language-sh codeBlockContainer_Ckt0 theme-code-block" style="--prism-color:#393A34;--prism-background-color:#f6f8fa"><div class="codeBlockContent_biex"><pre tabindex="0" class="prism-code language-sh codeBlock_bY9V thin-scrollbar" style="color:#393A34;background-color:#f6f8fa"><code class="codeBlockLines_e6Vv"><span class="token-line" style="color:#393A34"><span class="token plain">utun9: flags=8051&lt;UP,POINTOPOINT,RUNNING,MULTICAST&gt; mtu 1400</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        options=6460&lt;TSO4,TSO6,CHANNEL_IO,PARTIAL_CSUM,ZEROINVERT_CSUM&gt;</span><br></span><span class="token-line" style="color:#393A34"><span class="token plain">        inet 10.14.0.2 --&gt; 10.14.0.2 netmask 0xffff0000</span><br></span></code></pre><div class="buttonGroup__atx"><button type="button" aria-label="複製程式碼至剪貼簿" title="複製" class="clean-btn"><span class="copyButtonIcons_eSgA" aria-hidden="true"><svg viewBox="0 0 24 24" class="copyButtonIcon_y97N"><path fill="currentColor" d="M19,21H8V7H19M19,5H8A2,2 0 0,0 6,7V21A2,2 0 0,0 8,23H19A2,2 0 0,0 21,21V7A2,2 0 0,0 19,5M16,1H4A2,2 0 0,0 2,3V17H4V3H16V1Z"></path></svg><svg viewBox="0 0 24 24" class="copyButtonSuccessIcon_LjdS"><path fill="currentColor" d="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z"></path></svg></span></button></div></div></div>
<p>恩... mtu 設成 1400 呢<br>
<!-- -->通常 mtu 都會是 1500<br>
<!-- -->( 因為 Layer2 的乙太網路協定 )<br>
<!-- -->那為什麼他要設定成 1400 呢？</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="how">HOW<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#how" class="hash-link" aria-label="HOW的直接連結" title="HOW的直接連結">​</a></h3>
<p>VPN 的運作原理就像是把一封信塞在另一封信裡面<br>
<!-- -->而外面那封是寄給 VPN 的信，裡面那封才是真的要寄得對象<br>
<!-- -->等寄給 VPN 後再由 VPN 寄出裡面的
信其實就是封包<br>
<!-- -->而我們在信上會寫的資訊跟郵票就是封包的標頭<br>
<!-- -->但今天就算你把信塞在別人的信封裡<br>
<!-- -->對郵差來說那就是一封信<br>
<!-- -->一封信能塞的資訊就是這麼多<br>
<!-- -->所以你在透過 VPN 寄信時會需要再額外負擔外面那封信的郵票的成本<br>
<!-- -->那問題還是一樣，為什麼需要改動 MTU ?</p>
<h3 class="anchor anchorWithStickyNavbar_LWe7" id="why">WHY<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#why" class="hash-link" aria-label="WHY的直接連結" title="WHY的直接連結">​</a></h3>
<p>TCP 封包能裝的資料也就是 MSS = (MTU - (IP + TCP 的標頭))<br>
<!-- -->而 TCP 跟 IP 的標頭大小是固定的 40 (假定 ipv4, ipv6 會多 20)<br>
<!-- -->因此可以認定成 MTU - 40<br>
<!-- -->但我們今天其實還要負擔外面那封信的標頭成本<br>
<!-- -->若是 MTU 還是跟以前一樣的話我們的 TCP 封包其實太大包了<br>
<!-- -->那就只能在負擔更多成本來寄很多小封的，最後在組裝起來</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="結論沒有結論">結論：沒有結論<a href="https://hcc429.github.io/cclog/ccecret/vpn-mtu-mss#%E7%B5%90%E8%AB%96%E6%B2%92%E6%9C%89%E7%B5%90%E8%AB%96" class="hash-link" aria-label="結論：沒有結論的直接連結" title="結論：沒有結論的直接連結">​</a></h2>
<p>但到底應該設定多少？<br>
<!-- -->維基百科說 Wireguard 通常是 1420 - 1440 (ipv4 與 ipv6 的差異)<br>
<!-- -->這個數字來自以下<br>
<code>1500</code> - (UDP(<code>8</code>) + ipv4(<code>20</code>) + (Wireguard(<code>32</code>))) = <code>1440</code><br>
<!-- -->而我們真正的資料 TCP 封包在計算時在扣掉正常的成本 <code>40</code><br>
<!-- -->🤟🏻～  有了
但最上面的貼文說它設定 <code>1390</code><br>
<!-- -->而我自己的設定是 <code>1400</code><br>
<!-- -->到底是為什麼...
或許真相就這樣永遠石沉大海...</p>]]></content>
    </entry>
</feed>